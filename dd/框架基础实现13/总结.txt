
# 课后思考 框架内部导包 是相对导入还是绝对导入
	# 看django flask scrapy之后 再思考为什么要这么导入！

1. @property
	方法变属性：调用时不用写括号
	让属性变成只读
2. 's123xx'.upper() == 'S123XX'

3. 在python环境中安装自定义的第三方模块
	a. 包模块文件夹
	b. setup.py
	c. requirements.txt
	d. VERSION.txt
	e. 以上四个文件或文件夹在同一级目录下
	f. 在该路径下执行 python setup.py install

4. 关于日志的单例对象的使用
	Python的logging模块是线程安全的！
	# 多线程共同使用同一个日志对象：日志对象单例
		所有线程的日志都写入一个日志文件
		每个线程使用的那个日志对象是实例化之后的对象
		abcd thread1
		abcd thread2

	# 多线程分别使用各自的日志对象
		每个线程的日志写入各自的日志文件

5. 项目中的配置能够生效的原理
	根据 python ‘从哪里执行就从哪里导入’ 的原则，
	在框架的配置文件的最后，
	按执行的位置来导入项目的配置
	项目配置就覆盖了框架的配置，于是就生效了！